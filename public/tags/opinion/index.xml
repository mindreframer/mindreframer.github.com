<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Opinion on Bits and pieces to remember </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>http://localhost:1313/tags/opinion.html</link>
    <language>en-us</language>
    
    
    <updated>Mon, 25 May 2015 00:00:00 UTC</updated>
    
    <item>
      <title>I&#39;m betting my professional future on Elixir and why you should too</title>
      <link>http://localhost:1313/posts/2015/05-25-i-m-betting-on-elixir-and-why-you-should-too.html</link>
      <pubDate>Mon, 25 May 2015 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/posts/2015/05-25-i-m-betting-on-elixir-and-why-you-should-too.html</guid>
      <description>&lt;p&gt;First of all: who am I and why should you even listen?&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m not very active in Ruby (or any other) community and you probably have not heard about me before.
What makes me special is that I was one of the first hired engineers at DaWanda (german Etsy) and helped to grow their backend platform from initial 5 manually configured servers to over 150 dedicated / virtual servers. In that time it was a monolithic Rails app (now it might be more SOA like architecture). We had hit every problem a successful Rails app has to overcome:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;high memory consumption per process&lt;/li&gt;
&lt;li&gt;high cost of scaling up (colocation hosting requires upfront planning and some strategic thinking)&lt;/li&gt;
&lt;li&gt;slow start-up times of the app&lt;/li&gt;
&lt;li&gt;very slow test suite&lt;/li&gt;
&lt;li&gt;slow development cycles after a certain phase&lt;/li&gt;
&lt;li&gt;many coupled dependencies in the app (our own and also third party libraries)&lt;/li&gt;
&lt;li&gt;polyglot persistence:

&lt;ul&gt;
&lt;li&gt;mysql&lt;/li&gt;
&lt;li&gt;memcache&lt;/li&gt;
&lt;li&gt;redis&lt;/li&gt;
&lt;li&gt;SOLR&lt;/li&gt;
&lt;li&gt;Varnish (not a database, but still a stateful componnent, that can get out of sync with real data)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The founder Michael PÃ¼tz and me became the first DevOps team and we had to build quite a lot of tooling around the app to keep it running:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;custom monitoring solution (our inhouse version of Nagios, that in the end sucked like hell)&lt;/li&gt;
&lt;li&gt;custom dashboard(s) to have a cluster wide insight into the app&amp;rsquo;s business and server metrics
-&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
