<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Architecture on Bits and pieces to remember</title>
    <link>http://devopsbox.es/tags/architecture.html</link>
    <description>Recent content in Architecture on Bits and pieces to remember</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>roman.heinrich@gmail.com</managingEditor>
    <webMaster>roman.heinrich@gmail.com</webMaster>
    <lastBuildDate>Thu, 09 Jan 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://devopsbox.es/tags/architecture/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Microservices - Repeating the idea</title>
      <link>http://devopsbox.es/posts/2014/01-09-microservices-repeating-the-idea.html.html</link>
      <pubDate>Thu, 09 Jan 2014 00:00:00 +0000</pubDate>
      <author>roman.heinrich@gmail.com</author>
      <guid>http://devopsbox.es/posts/2014/01-09-microservices-repeating-the-idea.html.html</guid>
      <description>Fred George - Implementing Micro-Service Architecture  Chad Fowler - Disposable Components  Microservices and Functional Programming   Microservices and functional programming  from Michael Neale 
Innovating Faster with a Micro-Service Architecture using SBT, Continuous Delivery, and LXC   Innovating faster with SBT, Continuous Delivery, and LXC  from kscaldef 
Node.js:  Seneca.js Monolithic Node.js Kracken.js @Â Paypal  Python  Gilliam  Even moar links  Testing Microservices http://yobriefca.</description>
    </item>
    
    <item>
      <title>Micro-Service Architecture</title>
      <link>http://devopsbox.es/posts/2013/10-02-micro-service-architecture.html.html</link>
      <pubDate>Wed, 02 Oct 2013 00:00:00 +0000</pubDate>
      <author>roman.heinrich@gmail.com</author>
      <guid>http://devopsbox.es/posts/2013/10-02-micro-service-architecture.html.html</guid>
      <description>Baruco 2012: Micro-Service Architecture, by Fred George
SOA, service-oriented architectures, burst on the scene in the new millennium as the latest technology to support application growth. In concert with the Web, SOA ushered in new paradigms for structuring enterprise applications.
At the Forward Internet Group in London, we are implementing SOA in unusual ways. Rather than a few, business-related services being implemented per the original vision, we have developed systems made of myriads of very small, usually short-lived services.</description>
    </item>
    
    <item>
      <title>DCI-DDD-Rails</title>
      <link>http://devopsbox.es/posts/2013/01-14-dci-ddd-rails.html.html</link>
      <pubDate>Mon, 14 Jan 2013 00:00:00 +0000</pubDate>
      <author>roman.heinrich@gmail.com</author>
      <guid>http://devopsbox.es/posts/2013/01-14-dci-ddd-rails.html.html</guid>
      <description> Some links for DCI + Ruby  Building Rich Domain Models in Rails. Part 1. Decoupling Persistence DCI-Sample from vsavkin DCI-Resources  </description>
    </item>
    
    <item>
      <title>Architecture - Drawing Lines?</title>
      <link>http://devopsbox.es/posts/2013/01-12-architecture-drawing-lines.html.html</link>
      <pubDate>Sat, 12 Jan 2013 00:00:00 +0000</pubDate>
      <author>roman.heinrich@gmail.com</author>
      <guid>http://devopsbox.es/posts/2013/01-12-architecture-drawing-lines.html.html</guid>
      <description>I&amp;rsquo;m not the first to chime in about Uncle Bob&amp;rsquo;s Lost Years presentations:
 Robert C. Martin - Clean Architecture Keynote: Architecture the Lost Years by Robert Martin - YouTube  His ideas (maybe not originally his) lure you in with loud promices about clean architecture&amp;hellip; This got me thinking&amp;hellip; Yeah, I&amp;rsquo;m easily seduced by cleanness. Sigh&amp;hellip;
Here some ideas worth thinking about:  - Test are not for QA Team, good tests guide YOU and allow you to _rapidly_ and _radically_ refactor your code - If you&#39;re afraid to change something, you&#39;re dominated by your creation - Good architecture allows deferring decisions - Is your application build around a database?</description>
    </item>
    
    <item>
      <title>Clean Architecture - Link dump</title>
      <link>http://devopsbox.es/posts/2013/01-12-clean-architecture-link-dump.html.html</link>
      <pubDate>Sat, 12 Jan 2013 00:00:00 +0000</pubDate>
      <author>roman.heinrich@gmail.com</author>
      <guid>http://devopsbox.es/posts/2013/01-12-clean-architecture-link-dump.html.html</guid>
      <description> Obvious - A Ruby framework/layout Screaming Architecture Clean Architecture - More links from Uncle Bob Discussion - Objects On Rails  </description>
    </item>
    
  </channel>
</rss>